class Solution {
public:
    int shipWithinDays(vector<int>& weights, int days) {
        int sum = 0, temp = 0, bound = 0, cap = 0;
        for(const int & itr: weights){
            sum += itr; 
            bound = max(bound,itr);
        }
        if(days == 1){
            return sum;
        }
        cap = ceil(sum / days);
        cap = max(cap,bound);
        /*for(int i=0; i<weights.size(); ++i){
            temp += weights[i];
            //if exceeds, check the bound of cap
            if(temp > avg){
                bound = max(bound,temp);
                temp = weights[i];
            }    
        }*/
        while(capacity(cap,weights) > days){
           ++cap; 
        }
        return cap;
    }
    
    int capacity(int cap, vector<int>& weights){
        int sum =0, division = 1;
        for(int i=0; i<weights.size();++i){
           sum += weights[i];
           if(sum > cap){
               ++division;
               sum = weights[i];
           }            
           if ((sum == cap) && (i != weights.size()-1)){
               ++division;
               sum = 0;
           }
           
        }
        return division;
    }
    
};
