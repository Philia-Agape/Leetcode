/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxDepth(TreeNode* root) {
        int len = 0;
        if(root){
           len = 1; 
           depth(root,1,&len); 
           /*if(root->left){ 
               len = 2;
               len = max(len, depth(root->left, 2));
           }    
           if(root->right){
               len = max(len, depth(root->right, 2)); 
           }*/    
        } 
        return len;
    }
    
    //can not assign null value to TreeNode: so test dummy->next is null or not 
    void depth(TreeNode* dummy, int level, int* len){
       (*len) = max((*len),level);
       TreeNode* it; 
       if(dummy->left){ 
          it = dummy->left; 
          //level++; 
          depth(it,level+1,len); 
       }
       if(dummy->right){
          it = dummy->right;
          //level++; 
          depth(it,level+1,len);  
       }
       return; 
    }
};
