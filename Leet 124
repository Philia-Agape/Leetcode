/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int maxPathSum(TreeNode* root) {
       int ans = root->val;
       findmax(root, &ans);
        
       return ans; 
    }
    
    int findmax(TreeNode* root, int* ans){
        if(!root) return 0;
        
        int left = findmax(root->left, ans), right = findmax(root->right, ans);
        int mm = 0;
        left = max(0,left);
        right = max(0,right);
        mm = left > right ? left : right;
        //mm = mm > 0 ? mm : 0; 
        // mm = max(max(left,0), max(right,0));
        //*ans is the local max when this node is the node with highest level
        *ans = root->val + left + right > *ans ? root->val + left + right : *ans;
        
        
        return root->val+mm;
    }
};
