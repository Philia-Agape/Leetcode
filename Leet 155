class MinStack {
public:
    /** initialize your data structure here. */
    MinStack() {
       stack<int> mystack;
       vector<int> order; 
    }
    
    void push(int val) {
       mystack.push(val); 
       // e.g. 0,1,0 
       //order is decreasing sequence 
       if((order.empty()) || (val <= order.back())){ 
          order.push_back(val);
       }    
    }
    
    void pop() {
        if(mystack.top() == order.back())
           order.pop_back();
        mystack.pop();
    }
    
    int top() {
        return mystack.top();
    }
    
    int getMin() {
        /*for(const int& itr: order){
            min = (itr<min) ? itr : min;
        }*/
        return order.back();
    }
    
private:
    stack<int> mystack;
    vector<int> order;
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
