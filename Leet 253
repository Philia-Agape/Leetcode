class Solution {
public:
   /*void quicksort(int l, int r, vector<vector<int>>& time){
        //vector<int> temp = time[l];
        int e = time[l][1], s = time[l][0];
        int left = l, right = r;
        
        if(l+1 >= r){
          if(time[l][1] > time[r][1] && l<=r && l>=0){
                time[l][0] = time[r][0]; 
                time[l][1] = time[r][1];
                time[r][0] = s;          
                time[r][1] = e;
          }
          return;  
       } 
        
       while(left<right){
          while(e <= time[right][1] && left<right){
             right--; 
          }       
          time[left][0] = time[right][0];
          time[left][0] = time[right][1];
          
           
          while(e >= time[left][1] && left<right){
             left++; 
          } 
          time[right][0] = time[left][0];
          time[right][1] = time[left][1];
          
       }
        
       time[left][0] = s;
       time[left][1] = e;
       
        
       quicksort(l,left-1,time);
       quicksort(left+1,r,time); 
       return;
    }*/
    
    
    int minMeetingRooms(vector<vector<int>>& time) {
        if(time.empty()){
           return 0; 
        }
        const int l = time.size();
        int ans = 1, temp = 1;
        //vector<int> num (time.size(), 1);
        /*for(int i=0; i<time.size(); ++i){
           //int temp = 1; 
           for(int j=i+1; j<time.size(); ++j){
              if(time[i][0] >= time[j][0] && time[i][0] < time[j][1]){
                 num[i] += 1;  
              }
              if(time[j][0] >= time[i][0] && time[j][0] < time[i][1]){
                 num[j] += 1;  
              }  
           }
           //ans = (ans < temp) ? temp : ans; 
        }*/
        
        sort(time.begin(),time.end(),[](vector<int> a, vector<int> b){return a[1] < b[1];});
        
        //quicksort(0,l-1,time);
        //sort by endtime, increasing order
        
        for(int i=0; i<time.size(); ++i){
            temp = 1;
            for(int j=i+1; j<time.size(); ++j){
               if(time[i][1] > time[j][0]) ++temp; 
            }
            ans = (ans > temp) ? ans : temp;
        }
        
       
        return ans;
    }
    

};
