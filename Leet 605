class Solution {
public:
    bool canPlaceFlowers(vector<int>& flowerbed, int n) {
        int left = 0;
        int length = flowerbed.size();
         if ((length == 1)){
           if ((n <= 1) && (flowerbed[0] == 0)){  
           return true;
           }    
           else if ((n == 0) && (flowerbed[0] == 1)) {
            return true;   
           }  
           else {
            return false;   
           }
       }
       if ((flowerbed[0] == 0 && flowerbed[1] == 0)) { 
           flowerbed[0] = 1;
           ++left;
       }
       if ((flowerbed[length-1] == 0 && flowerbed[length-2] == 0)) { 
           flowerbed[length-1] = 1;
           ++left;
       }
        for (int i = 1; i<length-1;++i){
            if ((flowerbed[i] == 0) && (flowerbed[i+1] == 0) && (flowerbed[i-1] == 0) ){
                flowerbed[i] = 1;
                ++left; 
            }    
        }  
    if ((n <= left)) { 
        return true;
    }
    else {
        return false;
    }
    }    
};
