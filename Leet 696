class Solution {
public:
    int countBinarySubstrings(string s) {
        const int len = s.size();
        int block[len];
        int con = 1, b = 0, ans = 0;
        for(int i=1; i<len; ++i){
            if((s[i] != s[i-1])){
                block[b] = con;
                ++b;
                con = 1;
            }
            else{
               ++con;
            }    
        }
        block[b] = con;
        ++b;
        for(int i=0; i<b-1; ++i){
          cout << block[i];  
          ans += min(block[i], block[i+1]);
        }
        return ans;
    }
};


Modified Version:
class Solution {
public:
    int countBinarySubstrings(string s) {
        const int len = s.size();
        //int block[len];
        
        int con = 1, pre = 0, ans = 0;
        for(int i=1; i<len; ++i){
           if(s[i] == s[i-1]){
               ++con;
           } 
           else{
               ans += min(con, pre);
               pre = con;
               con = 1;
           } 
        }
        ans += min(con,pre);
        return ans;
    }
};
